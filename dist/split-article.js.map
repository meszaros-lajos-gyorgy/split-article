{"version":3,"file":"split-article.js","sources":["../src/helpers/onready.js","../node_modules/ramda/src/internal/_isPlaceholder.js","../node_modules/ramda/src/internal/_curry1.js","../node_modules/ramda/src/always.js","../node_modules/ramda/src/internal/_curry2.js","../node_modules/ramda/src/apply.js","../node_modules/ramda/src/internal/_arity.js","../node_modules/ramda/src/internal/_pipe.js","../node_modules/ramda/src/internal/_curry3.js","../node_modules/ramda/src/internal/_xwrap.js","../node_modules/ramda/src/bind.js","../node_modules/ramda/src/internal/_isArray.js","../node_modules/ramda/src/internal/_isString.js","../node_modules/ramda/src/isArrayLike.js","../node_modules/ramda/src/internal/_reduce.js","../node_modules/ramda/src/reduce.js","../node_modules/ramda/src/internal/_checkForMethod.js","../node_modules/ramda/src/slice.js","../node_modules/ramda/src/tail.js","../node_modules/ramda/src/pipe.js","../node_modules/ramda/src/reverse.js","../node_modules/ramda/src/compose.js","../node_modules/ramda/src/internal/_curryN.js","../node_modules/ramda/src/curryN.js","../node_modules/ramda/src/gt.js","../node_modules/ramda/src/ifElse.js","../node_modules/ramda/src/add.js","../node_modules/ramda/src/inc.js","../node_modules/ramda/src/internal/_isNumber.js","../node_modules/ramda/src/length.js","../node_modules/ramda/src/internal/_isTransformer.js","../node_modules/ramda/src/internal/_map.js","../node_modules/ramda/src/internal/_xfBase.js","../node_modules/ramda/src/internal/_xmap.js","../node_modules/ramda/src/internal/_has.js","../node_modules/ramda/src/internal/_isArguments.js","../node_modules/ramda/src/keys.js","../node_modules/ramda/src/map.js","../node_modules/ramda/src/internal/_dispatchable.js","../node_modules/ramda/src/modulo.js","../node_modules/ramda/src/multiply.js","../node_modules/ramda/src/times.js","../node_modules/ramda/src/repeat.js","../node_modules/ramda/src/sum.js","../node_modules/ramda/src/zip.js"],"sourcesContent":["const isReady = () => ['interactive', 'complete'].includes(document.readyState)\n\nexport default function onReady (handler) {\n  if (isReady()) {\n    handler()\n  } else {\n    handler.done = false\n    document.addEventListener('readystatechange', () => {\n      if (isReady() && !handler.done) {\n        handler.done = true\n        handler()\n      }\n    })\n  }\n}\n","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nmodule.exports = _curry1(function always(val) {\n  return function() {\n    return val;\n  };\n});\n","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nmodule.exports = _curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n","module.exports = function _pipe(f, g) {\n  return function() {\n    return g.call(this, f.apply(this, arguments));\n  };\n};\n","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n","module.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n","module.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n","var _curry1 = require('./internal/_curry1');\nvar _isArray = require('./internal/_isArray');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @deprecated since v0.23.0\n * @example\n *\n *      R.isArrayLike([]); //=> true\n *      R.isArrayLike(true); //=> false\n *      R.isArrayLike({}); //=> false\n *      R.isArrayLike({length: 10}); //=> false\n *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n","var _xwrap = require('./_xwrap');\nvar bind = require('../bind');\nvar isArrayLike = require('../isArrayLike');\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj) {\n    return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list);\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n","var _curry3 = require('./internal/_curry3');\nvar _reduce = require('./internal/_reduce');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * `R.reduced` to shortcut the iteration.\n *\n * The arguments' order of `reduceRight`'s iterator function is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n","var _isArray = require('./_isArray');\n\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function() {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n      fn.apply(this, arguments) :\n      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry1 = require('./internal/_curry1');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n","var _arity = require('./internal/_arity');\nvar _pipe = require('./internal/_pipe');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipe, arguments[0], tail(arguments)));\n};\n","var _curry1 = require('./internal/_curry1');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') :\n                           Array.prototype.slice.call(list, 0).reverse();\n});\n","var pipe = require('./pipe');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n};\n","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gt(a, b) { return a > b; });\n","var _curry3 = require('./internal/_curry3');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n    function _ifElse() {\n      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n    }\n  );\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n","var add = require('./add');\n\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nmodule.exports = add(1);\n","module.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};\n","var _curry1 = require('./internal/_curry1');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n","module.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n","var _has = require('./_has');\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar _isArguments = require('./internal/_isArguments');\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _map = require('./internal/_map');\nvar _reduce = require('./internal/_reduce');\nvar _xmap = require('./internal/_xmap');\nvar curryN = require('./curryN');\nvar keys = require('./keys');\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n","var _isArray = require('./_isArray');\nvar _isTransformer = require('./_isTransformer');\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see `mathMod`.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nmodule.exports = _curry2(function modulo(a, b) { return a % b; });\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\n","var _curry2 = require('./internal/_curry2');\nvar always = require('./always');\nvar times = require('./times');\n\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n","var add = require('./add');\nvar reduce = require('./reduce');\n\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nmodule.exports = reduce(add, 0);\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\n"],"names":["onReady","handler","isReady","done","document","addEventListener","a","fn","f1","arguments","length","_isPlaceholder","apply","this","_curry1","val","f2","b","_b","_a","_curry2","args","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","f","g","call","f3","c","_c","XWrap","prototype","acc","x","thisObj","_arity","Array","isArray","Object","toString","_isArray","_isString","nodeType","hasOwnProperty","_arrayReduce","xf","list","idx","len","_iterableReduce","iter","step","next","value","_methodReduce","obj","reduce","bind","symIterator","Symbol","iterator","_xwrap","isArrayLike","TypeError","_curry3","_reduce","methodname","slice","_checkForMethod","fromIndex","toIndex","Infinity","_pipe","tail","split","reverse","join","pipe","_curryN","received","combined","argsIdx","left","combinedIdx","result","condition","onTrue","onFalse","curryN","Math","max","Number","add","_isNumber","NaN","functor","init","XMap","_xfBase","input","prop","_has","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","keys","nIdx","ks","checkArgsLength","_isArguments","methodNames","pop","_isTransformer","_xmap","key","_map","isNaN","RangeError","times","always","rv","min","includes","readyState"],"mappings":"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"}