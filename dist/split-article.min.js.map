{"version":3,"file":"split-article.min.js","sources":["../node_modules/ramda/src/internal/_reduce.js","../node_modules/ramda/src/internal/_curryN.js","../node_modules/ramda/src/internal/_clone.js","../node_modules/ramda/src/internal/_equals.js","../node_modules/ramda/src/internal/_toString.js","../src/helpers/throttle.js","../src/index.js","../node_modules/ramda/src/internal/_has.js","../node_modules/ramda/src/internal/_assign.js","../node_modules/ramda/src/internal/_objectAssign.js","../node_modules/ramda/src/internal/_isPlaceholder.js","../node_modules/ramda/src/internal/_curry1.js","../node_modules/ramda/src/internal/_curry2.js","../node_modules/ramda/src/merge.js","../node_modules/ramda/src/internal/_isArray.js","../node_modules/ramda/src/internal/_checkForMethod.js","../node_modules/ramda/src/internal/_curry3.js","../node_modules/ramda/src/slice.js","../node_modules/ramda/src/internal/_isString.js","../node_modules/ramda/src/internal/_isArrayLike.js","../node_modules/ramda/src/internal/_xwrap.js","../node_modules/ramda/src/internal/_arity.js","../node_modules/ramda/src/bind.js","../node_modules/ramda/src/reduce.js","../node_modules/ramda/src/internal/_concat.js","../node_modules/ramda/src/append.js","../node_modules/ramda/src/forEach.js","../node_modules/ramda/src/internal/_pipe.js","../node_modules/ramda/src/tail.js","../node_modules/ramda/src/pipe.js","../node_modules/ramda/src/reverse.js","../node_modules/ramda/src/compose.js","../node_modules/ramda/src/internal/_isTransformer.js","../node_modules/ramda/src/internal/_dispatchable.js","../node_modules/ramda/src/internal/_map.js","../node_modules/ramda/src/internal/_xfBase.js","../node_modules/ramda/src/internal/_xmap.js","../node_modules/ramda/src/curryN.js","../node_modules/ramda/src/internal/_isArguments.js","../node_modules/ramda/src/keys.js","../node_modules/ramda/src/map.js","../node_modules/ramda/src/adjust.js","../node_modules/ramda/src/nth.js","../node_modules/ramda/src/last.js","../node_modules/ramda/src/internal/_isNumber.js","../node_modules/ramda/src/length.js","../node_modules/ramda/src/max.js","../node_modules/ramda/src/add.js","../node_modules/ramda/src/sum.js","../node_modules/ramda/src/apply.js","../node_modules/ramda/src/flatten.js","../node_modules/ramda/src/internal/_makeFlat.js","../node_modules/ramda/src/internal/_cloneRegExp.js","../node_modules/ramda/src/type.js","../node_modules/ramda/src/clone.js","../node_modules/ramda/src/internal/_filter.js","../node_modules/ramda/src/internal/_isObject.js","../node_modules/ramda/src/internal/_xfilter.js","../node_modules/ramda/src/filter.js","../node_modules/ramda/src/lt.js","../node_modules/ramda/src/gt.js","../node_modules/ramda/src/internal/_complement.js","../node_modules/ramda/src/reject.js","../node_modules/ramda/src/ifElse.js","../node_modules/ramda/src/assoc.js","../node_modules/ramda/src/internal/_isInteger.js","../node_modules/ramda/src/isNil.js","../node_modules/ramda/src/assocPath.js","../node_modules/ramda/src/__.js","../node_modules/ramda/src/curry.js","../node_modules/ramda/src/internal/_arrayFromIterator.js","../node_modules/ramda/src/internal/_containsWith.js","../node_modules/ramda/src/internal/_functionName.js","../node_modules/ramda/src/identical.js","../node_modules/ramda/src/equals.js","../node_modules/ramda/src/head.js","../node_modules/ramda/src/not.js","../node_modules/ramda/src/internal/_isFunction.js","../node_modules/ramda/src/internal/_indexOf.js","../node_modules/ramda/src/internal/_contains.js","../node_modules/ramda/src/internal/_quote.js","../node_modules/ramda/src/internal/_toISOString.js","../node_modules/ramda/src/toString.js","../node_modules/ramda/src/invoker.js","../node_modules/ramda/src/join.js","../node_modules/ramda/src/always.js","../node_modules/ramda/src/times.js","../node_modules/ramda/src/repeat.js","../node_modules/ramda/src/contains.js","../node_modules/ramda/src/dec.js","../node_modules/ramda/src/internal/_reduced.js","../node_modules/ramda/src/internal/_xfindIndex.js","../node_modules/ramda/src/findIndex.js","../node_modules/ramda/src/when.js","../node_modules/ramda/src/addIndex.js","../node_modules/ramda/src/zip.js","../node_modules/ramda/src/path.js","../node_modules/ramda/src/prop.js","../node_modules/ramda/src/pluck.js","../node_modules/ramda/src/converge.js","../node_modules/ramda/src/replace.js","../node_modules/ramda/src/multiply.js","../node_modules/ramda/src/identity.js","../node_modules/ramda/src/internal/_identity.js","../node_modules/ramda/src/ap.js","../node_modules/ramda/src/liftN.js","../node_modules/ramda/src/lift.js","../node_modules/ramda/src/or.js","../node_modules/ramda/src/either.js","../node_modules/ramda/src/empty.js","../node_modules/ramda/src/isEmpty.js","../node_modules/ramda/src/concat.js","../node_modules/ramda/src/internal/_xtake.js","../node_modules/ramda/src/take.js","../node_modules/ramda/src/internal/_xdropLast.js","../node_modules/ramda/src/dropLast.js","../node_modules/ramda/src/internal/_dropLast.js","../node_modules/ramda/src/internal/_xdrop.js","../node_modules/ramda/src/drop.js","../node_modules/ramda/src/of.js","../node_modules/ramda/src/internal/_of.js","../src/helpers/onresize.js"],"sourcesContent":["var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\nvar _xwrap = /*#__PURE__*/require('./_xwrap');\n\nvar bind = /*#__PURE__*/require('../bind');\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\nmodule.exports = _reduce;","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","var _cloneRegExp = /*#__PURE__*/require('./_cloneRegExp');\n\nvar type = /*#__PURE__*/require('../type');\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\n\nfunction _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}\nmodule.exports = _clone;","var _arrayFromIterator = /*#__PURE__*/require('./_arrayFromIterator');\n\nvar _containsWith = /*#__PURE__*/require('./_containsWith');\n\nvar _functionName = /*#__PURE__*/require('./_functionName');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar identical = /*#__PURE__*/require('../identical');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar type = /*#__PURE__*/require('../type');\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\nmodule.exports = _equals;","var _contains = /*#__PURE__*/require('./_contains');\n\nvar _map = /*#__PURE__*/require('./_map');\n\nvar _quote = /*#__PURE__*/require('./_quote');\n\nvar _toISOString = /*#__PURE__*/require('./_toISOString');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar reject = /*#__PURE__*/require('../reject');\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\nmodule.exports = _toString;","// http://stackoverflow.com/a/27078401/1806628\r\nexport default function throttle (func, wait, options = {}) {\r\n  let context, args, result\r\n  let timeout = null\r\n  let previous = 0\r\n\r\n  const later = function () {\r\n    previous = options.leading === false ? 0 : Date.now()\r\n    timeout = null\r\n    result = func.apply(context, args)\r\n\r\n    if (!timeout) {\r\n      context = args = null\r\n    }\r\n  }\r\n\r\n  return function () {\r\n    const now = Date.now()\r\n\r\n    if (!previous && options.leading === false) {\r\n      previous = now\r\n    }\r\n\r\n    const remaining = wait - (now - previous)\r\n\r\n    context = this\r\n    args = arguments\r\n\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout)\r\n        timeout = null\r\n      }\r\n      previous = now\r\n      result = func.apply(context, args)\r\n      if (!timeout) {\r\n        context = args = null\r\n      }\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining)\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","/*\r\nIssues/TODOS:\r\n  - target min-height is not taken into account\r\n*/\r\n\r\nimport {\r\n  merge,\r\n  slice,\r\n  reduce,\r\n  append,\r\n  forEach,\r\n  compose,\r\n  map,\r\n  adjust,\r\n  last,\r\n  length,\r\n  max,\r\n  sum,\r\n  apply,\r\n  flatten,\r\n  add,\r\n  clone,\r\n  filter,\r\n  tail,\r\n  lt,\r\n  gt,\r\n  reject,\r\n  ifElse,\r\n  assoc,\r\n  assocPath,\r\n  __\r\n} from 'ramda'\r\n\r\nimport {\r\n  getVisibleContentHeight,\r\n  getMarginTop,\r\n  getMarginBottom,\r\n  checkMinimalFit,\r\n  checkFullFit,\r\n  getBoxHeight,\r\n  getMeasurementWidth,\r\n  getMeasurementHeight,\r\n  getFullContentHeight\r\n} from './helpers/measurement'\r\n\r\nimport {\r\n  getColumns,\r\n  getColumnsPerTarget,\r\n  addColumnTo,\r\n  getNextTarget\r\n} from './helpers/columns'\r\n\r\nimport {\r\n  cloneNode,\r\n  appendTo,\r\n  removeFrom,\r\n  setInnerHTML,\r\n  setStyle,\r\n  updateMargin,\r\n  children\r\n} from './helpers/ramda-dom'\r\n\r\nimport {\r\n  sliceContentVertically\r\n} from './helpers/slicing'\r\n\r\nimport {\r\n  makePairs\r\n} from './helpers/ramda-utils'\r\n\r\nimport onResize from './helpers/onresize'\r\n\r\nconst DEFAULT_CONFIG = {\r\n  width: 50,\r\n  speed: 200,\r\n  offset: 0,\r\n  limit: Infinity,\r\n  gap: '30px'\r\n}\r\n\r\nconst render = (columns, elements, measuredWidth) => {\r\n  const elementsToRender = clone(elements)\r\n  const duplicatedChildrenHolder = appendTo(elements[0].parentNode, document.createElement('div'))\r\n\r\n  forEach(setInnerHTML(''), columns)\r\n\r\n  let currentColumnIndex = 0\r\n  let lastColumnIndex = length(columns) - 1\r\n\r\n  while (true) {\r\n    const currentChild = elementsToRender.shift()\r\n    const clonedChild = appendTo(duplicatedChildrenHolder, cloneNode(currentChild))\r\n    const currentColumn = columns[currentColumnIndex]\r\n\r\n    const childrenInColumn = children(currentColumn)\r\n    const lastChildInColumn = last(childrenInColumn)\r\n    const lastChildMarginBottom = length(childrenInColumn) ? getMarginBottom(lastChildInColumn) : 0\r\n    const margin = max(lastChildMarginBottom, getMarginTop(clonedChild))\r\n\r\n    // todo: make this more readable by separating height count from margin count\r\n    const remainingSpace = getVisibleContentHeight(currentColumn) - compose(\r\n      sum,\r\n      adjust(x => sum(map(\r\n        apply(max),\r\n        makePairs(slice(1, -1, flatten(x)))\r\n      )), 1),\r\n      reduce((total, {marginTop, height, marginBottom}) => compose(\r\n        adjust(add(height), 0),\r\n        adjust(append([marginTop, marginBottom]), 1)\r\n      )(total), [0, []]),\r\n      map(node => ({\r\n        marginTop: getMarginTop(node),\r\n        height: getBoxHeight(node),\r\n        marginBottom: getMarginBottom(node)\r\n      }))\r\n    )(childrenInColumn)\r\n\r\n    if (checkFullFit(clonedChild, remainingSpace, lastChildMarginBottom)) {\r\n      // fits perfectly\r\n\r\n      currentColumn.appendChild(clonedChild)\r\n    } else if (checkMinimalFit(clonedChild, remainingSpace, lastChildMarginBottom)) {\r\n      // needs slicing\r\n\r\n      const [top, bottom] = sliceContentVertically(clonedChild, remainingSpace - margin)\r\n\r\n      currentColumn.appendChild(top)\r\n      currentColumnIndex++\r\n\r\n      elementsToRender.unshift(bottom)\r\n    } else {\r\n      // doesn't fit at all\r\n\r\n      if (length(childrenInColumn)) {\r\n        updateMargin('bottom', 0, lastChildInColumn)\r\n      }\r\n      updateMargin('top', 0, clonedChild)\r\n\r\n      currentColumnIndex++\r\n      elementsToRender.unshift(clonedChild)\r\n    }\r\n\r\n    if (elementsToRender.length === 0 || currentColumnIndex > lastColumnIndex) {\r\n      break\r\n    }\r\n  }\r\n\r\n  removeFrom(elements[0].parentNode, duplicatedChildrenHolder)\r\n\r\n  return gt(length(elementsToRender), 0)\r\n}\r\n\r\nfunction splitArticle (rawConfig) {\r\n  const config = merge(DEFAULT_CONFIG, rawConfig)\r\n  setStyle('height:0;position:absolute;overflow:hidden', config.source)\r\n\r\n  const measuredWidth = getMeasurementWidth(config.source, config.width)\r\n  const measuredHeight = getMeasurementHeight(config.source, config.width)\r\n  config.source.style.width = measuredWidth + 'px'\r\n\r\n  config.targets = compose(\r\n    reject(target => target.tooLittle === true),\r\n    map(ifElse(\r\n      compose(gt(measuredHeight, __), getFullContentHeight),\r\n      compose(\r\n        assoc('tooLittle', true),\r\n        assocPath(['style', 'display'], 'none')\r\n      ),\r\n      setInnerHTML('')\r\n    ))\r\n  )(config.targets)\r\n\r\n  if (length(config.targets)) {\r\n    const sourceChildren = slice(config.offset, config.limit, children(config.source))\r\n\r\n    do {\r\n      addColumnTo(measuredWidth, getNextTarget(config.targets))\r\n    } while (render(getColumns(config.targets), sourceChildren, measuredWidth))\r\n\r\n    compose(\r\n      map(updateMargin('left', config.gap)),\r\n      flatten,\r\n      map(tail),\r\n      filter(compose(lt(1), length)),\r\n      getColumnsPerTarget\r\n    )(config.targets)\r\n  }\r\n}\r\n\r\nsplitArticle.watch = rawConfig => {\r\n  const config = merge(DEFAULT_CONFIG, rawConfig)\r\n  splitArticle(config)\r\n  onResize(() => splitArticle(config), config.speed)\r\n}\r\n\r\nexport default splitArticle\r\n","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nmodule.exports = _has;","var _objectAssign = /*#__PURE__*/require('./_objectAssign');\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _has = /*#__PURE__*/require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\nmodule.exports = _objectAssign;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var _assign = /*#__PURE__*/require('./internal/_assign');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\n\n\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nmodule.exports = merge;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _isArray = /*#__PURE__*/require('./_isArray');\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\nmodule.exports = _checkForMethod;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\nmodule.exports = _curry3;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nmodule.exports = slice;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\nmodule.exports = _isString;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isString = /*#__PURE__*/require('./_isString');\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nmodule.exports = _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\nmodule.exports = _xwrap;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nmodule.exports = bind;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nmodule.exports = reduce;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nfunction _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _concat;","var _concat = /*#__PURE__*/require('./internal/_concat');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\n\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nmodule.exports = append;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\n\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nmodule.exports = forEach;","function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}\nmodule.exports = _pipe;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\n\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nmodule.exports = tail;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _pipe = /*#__PURE__*/require('./internal/_pipe');\n\nvar reduce = /*#__PURE__*/require('./reduce');\n\nvar tail = /*#__PURE__*/require('./tail');\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\n\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\nmodule.exports = pipe;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\n\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nmodule.exports = reverse;","var pipe = /*#__PURE__*/require('./pipe');\n\nvar reverse = /*#__PURE__*/require('./reverse');\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\n\nfunction compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}\nmodule.exports = compose;","function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}\nmodule.exports = _isTransformer;","var _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isTransformer = /*#__PURE__*/require('./_isTransformer');\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\nmodule.exports = _dispatchable;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _map;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XMap = /*#__PURE__*/function () {\n\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nmodule.exports = _xmap;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","var _has = /*#__PURE__*/require('./_has');\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nmodule.exports = _isArguments;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _isArguments = /*#__PURE__*/require('./internal/_isArguments');\n\n// cover IE < 9 keys issues\n\n\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nmodule.exports = keys;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _map = /*#__PURE__*/require('./internal/_map');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xmap = /*#__PURE__*/require('./internal/_xmap');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nmodule.exports = map;","var _concat = /*#__PURE__*/require('./internal/_concat');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\n\n\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nmodule.exports = adjust;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nmodule.exports = nth;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last = /*#__PURE__*/nth(-1);\nmodule.exports = last;","function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}\nmodule.exports = _isNumber;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _isNumber = /*#__PURE__*/require('./internal/_isNumber');\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\n\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nmodule.exports = length;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nmodule.exports = max;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\n\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nmodule.exports = add;","var add = /*#__PURE__*/require('./add');\n\nvar reduce = /*#__PURE__*/require('./reduce');\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\n\nvar sum = /*#__PURE__*/reduce(add, 0);\nmodule.exports = sum;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\n\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nmodule.exports = apply;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _makeFlat = /*#__PURE__*/require('./internal/_makeFlat');\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nmodule.exports = flatten;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\nmodule.exports = _makeFlat;","function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}\nmodule.exports = _cloneRegExp;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nmodule.exports = type;","var _clone = /*#__PURE__*/require('./internal/_clone');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\n\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nmodule.exports = clone;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _filter;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\nmodule.exports = _isObject;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFilter = /*#__PURE__*/function () {\n\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nmodule.exports = _xfilter;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _filter = /*#__PURE__*/require('./internal/_filter');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xfilter = /*#__PURE__*/require('./internal/_xfilter');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nmodule.exports = filter;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\n\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nmodule.exports = lt;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\n\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nmodule.exports = gt;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\nmodule.exports = _complement;","var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\n\n\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nmodule.exports = ifElse;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nmodule.exports = assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nmodule.exports = isNil;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _isArray = /*#__PURE__*/require('./internal/_isArray');\n\nvar _isInteger = /*#__PURE__*/require('./internal/_isInteger');\n\nvar assoc = /*#__PURE__*/require('./assoc');\n\nvar isNil = /*#__PURE__*/require('./isNil');\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\n\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nmodule.exports = assocPath;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = { '@@functional/placeholder': true };","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nmodule.exports = curry;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}\nmodule.exports = _arrayFromIterator;","function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}\nmodule.exports = _containsWith;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\nmodule.exports = _functionName;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nmodule.exports = identical;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _equals = /*#__PURE__*/require('./internal/_equals');\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nmodule.exports = equals;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head = /*#__PURE__*/nth(0);\nmodule.exports = head;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\n\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nmodule.exports = not;","function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}\nmodule.exports = _isFunction;","var equals = /*#__PURE__*/require('../equals');\n\nfunction _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}\nmodule.exports = _indexOf;","var _indexOf = /*#__PURE__*/require('./_indexOf');\n\nfunction _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\nmodule.exports = _contains;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _toString = /*#__PURE__*/require('./internal/_toString');\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nmodule.exports = toString;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isFunction = /*#__PURE__*/require('./internal/_isFunction');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar toString = /*#__PURE__*/require('./toString');\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nmodule.exports = invoker;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join = /*#__PURE__*/invoker(1, 'join');\nmodule.exports = join;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nmodule.exports = always;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\n\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nmodule.exports = times;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar always = /*#__PURE__*/require('./always');\n\nvar times = /*#__PURE__*/require('./times');\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\n\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nmodule.exports = repeat;","var _contains = /*#__PURE__*/require('./internal/_contains');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\n\n\nvar contains = /*#__PURE__*/_curry2(_contains);\nmodule.exports = contains;","var add = /*#__PURE__*/require('./add');\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\n\nvar dec = /*#__PURE__*/add(-1);\nmodule.exports = dec;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _reduced;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFindIndex = /*#__PURE__*/function () {\n\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nmodule.exports = _xfindIndex;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xfindIndex = /*#__PURE__*/require('./internal/_xfindIndex');\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\n\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nmodule.exports = findIndex;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\n\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nmodule.exports = when;","var _concat = /*#__PURE__*/require('./internal/_concat');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\n\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = addIndex;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\n\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nmodule.exports = zip;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\n\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nmodule.exports = path;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar path = /*#__PURE__*/require('./path');\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nmodule.exports = prop;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar map = /*#__PURE__*/require('./map');\n\nvar prop = /*#__PURE__*/require('./prop');\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nmodule.exports = pluck;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _map = /*#__PURE__*/require('./internal/_map');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar max = /*#__PURE__*/require('./max');\n\nvar pluck = /*#__PURE__*/require('./pluck');\n\nvar reduce = /*#__PURE__*/require('./reduce');\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\n\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nmodule.exports = converge;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\n\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nmodule.exports = replace;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\n\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nmodule.exports = multiply;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _identity = /*#__PURE__*/require('./internal/_identity');\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity = /*#__PURE__*/_curry1(_identity);\nmodule.exports = identity;","function _identity(x) {\n  return x;\n}\nmodule.exports = _identity;","var _concat = /*#__PURE__*/require('./internal/_concat');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar map = /*#__PURE__*/require('./map');\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\n\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nmodule.exports = ap;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar ap = /*#__PURE__*/require('./ap');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar map = /*#__PURE__*/require('./map');\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\n\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nmodule.exports = liftN;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar liftN = /*#__PURE__*/require('./liftN');\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\n\n\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nmodule.exports = lift;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\n\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nmodule.exports = or;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isFunction = /*#__PURE__*/require('./internal/_isFunction');\n\nvar lift = /*#__PURE__*/require('./lift');\n\nvar or = /*#__PURE__*/require('./or');\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\n\n\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nmodule.exports = either;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _isArguments = /*#__PURE__*/require('./internal/_isArguments');\n\nvar _isArray = /*#__PURE__*/require('./internal/_isArray');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\n\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nmodule.exports = empty;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar empty = /*#__PURE__*/require('./empty');\n\nvar equals = /*#__PURE__*/require('./equals');\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\n\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nmodule.exports = isEmpty;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isArray = /*#__PURE__*/require('./internal/_isArray');\n\nvar _isFunction = /*#__PURE__*/require('./internal/_isFunction');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\nvar toString = /*#__PURE__*/require('./toString');\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\n\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nmodule.exports = concat;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XTake = /*#__PURE__*/function () {\n\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nmodule.exports = _xtake;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xtake = /*#__PURE__*/require('./internal/_xtake');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nmodule.exports = take;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDropLast = /*#__PURE__*/function () {\n\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nmodule.exports = _xdropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _dropLast = /*#__PURE__*/require('./internal/_dropLast');\n\nvar _xdropLast = /*#__PURE__*/require('./internal/_xdropLast');\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nmodule.exports = dropLast;","var take = /*#__PURE__*/require('../take');\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDrop = /*#__PURE__*/function () {\n\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nmodule.exports = _xdrop;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xdrop = /*#__PURE__*/require('./internal/_xdrop');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nmodule.exports = drop;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _of = /*#__PURE__*/require('./internal/_of');\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\n\nvar of = /*#__PURE__*/_curry1(_of);\nmodule.exports = of;","function _of(x) {\n  return [x];\n}\nmodule.exports = _of;","import throttle from './throttle'\r\n\r\nconst onResize = (fn, speed = 200) => {\r\n  let previousPageHeight = document.body.clientHeight\r\n\r\n  window.addEventListener('resize', throttle(() => {\r\n    if (document.body.clientHeight !== previousPageHeight) {\r\n      previousPageHeight = document.body.clientHeight\r\n      fn()\r\n    }\r\n  }, speed, {\r\n    trailing: true,\r\n    leading: true\r\n  }))\r\n}\r\n\r\nexport default onResize\r\n"],"names":["_arrayReduce","xf","acc","list","idx","len","length","_iterableReduce","iter","step","next","done","value","_methodReduce","obj","methodName","bind","_curryN","received","fn","combined","argsIdx","left","combinedIdx","arguments","result","_isPlaceholder","apply","this","_arity","_clone","refFrom","refTo","deep","copy","copiedValue","key","type","Date","valueOf","_cloneRegExp","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_a","_b","_equals","slice","a","_arrayFromIterator","b","_containsWith","aItem","identical","typeA","equals","constructor","_functionName","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","keys","extendedStackA","extendedStackB","_has","_toString","x","seen","recur","y","xs","_contains","mapPairs","_map","k","_quote","sort","Object","prototype","toString","call","join","reject","test","isNaN","NaN","_toISOString","Infinity","repr","throttle","func","wait","options","let","context","args","timeout","previous","later","leading","now","const","remaining","clearTimeout","trailing","setTimeout","prop","hasOwnProperty","assign","target","TypeError","output","nextKey","f1","f2","_curry1","_curry2","l","r","_assign","Array","isArray","val","methodname","_isArray","f3","c","_c","_curry3","_checkForMethod","fromIndex","toIndex","_isString","nodeType","XWrap","f","Error","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","thisObj","symIterator","Symbol","iterator","_xwrap","_isArrayLike","reduce","_reduce","set1","set2","len1","len2","el","_concat","g","_pipe","tail","split","reverse","pipe","methodNames","pop","_isTransformer","transducer","functor","init","XMap","_xfBase","input","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","_keys","nIdx","ks","checkArgsLength","_isArguments","_dispatchable","_xmap","curryN","_idx","_list","offset","charAt","nth","_isNumber","Number","add","recursive","flatt","jlen","j","ilen","_makeFlat","pattern","RegExp","undefined","clone","XFilter","pred","filterable","_isObject","_filter","filter","_complement","condition","onTrue","onFalse","Math","max","p","isInteger","assocPath","path","nextObj","isNil","_isInteger","arr","assoc","@@functional/placeholder","push","match","String","inf","indexOf","_indexOf","s","replace","pad","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","arity","method","_isFunction","invoker","RangeError","times","always","@@transducer/value","@@transducer/reduced","XFindIndex","found","_reduced","whenTrueFn","origFn","rv","min","paths","map","after","fns","pluck","regex","replacement","str","applyF","applyX","ap","lifted","liftN","lift","or","empty","XTake","i","ret","XDropLast","pos","full","store","take","XDrop","onResize","speed","previousPageHeight","document","body","clientHeight","window","addEventListener","splitArticle"],"mappings":"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"}