{"version":3,"file":"split-article.min.js","sources":["../src/helpers/throttle.js","../src/index.js","../node_modules/ramda/src/internal/_cloneRegExp.js","../node_modules/ramda/src/internal/_isPlaceholder.js","../node_modules/ramda/src/internal/_curry1.js","../node_modules/ramda/src/type.js","../node_modules/ramda/src/internal/_clone.js","../node_modules/ramda/src/clone.js","../node_modules/ramda/src/internal/_curry2.js","../node_modules/ramda/src/internal/_curry3.js","../node_modules/ramda/src/replace.js","../node_modules/ramda/src/internal/_isString.js","../node_modules/ramda/src/reverse.js","../node_modules/ramda/src/internal/_arity.js","../node_modules/ramda/src/internal/_curryN.js","../node_modules/ramda/src/curryN.js","../node_modules/ramda/src/curry.js","../node_modules/ramda/src/internal/_isArray.js","../node_modules/ramda/src/internal/_isTransformer.js","../node_modules/ramda/src/internal/_dispatchable.js","../node_modules/ramda/src/internal/_map.js","../node_modules/ramda/src/internal/_xwrap.js","../node_modules/ramda/src/bind.js","../node_modules/ramda/src/isArrayLike.js","../node_modules/ramda/src/internal/_reduce.js","../node_modules/ramda/src/internal/_xfBase.js","../node_modules/ramda/src/internal/_xmap.js","../node_modules/ramda/src/internal/_has.js","../node_modules/ramda/src/internal/_isArguments.js","../node_modules/ramda/src/keys.js","../node_modules/ramda/src/map.js","../node_modules/ramda/src/add.js","../node_modules/ramda/src/reduce.js","../node_modules/ramda/src/sum.js","../node_modules/ramda/src/multiply.js","../node_modules/ramda/src/inc.js","../node_modules/ramda/src/internal/_concat.js","../node_modules/ramda/src/adjust.js","../node_modules/ramda/src/dec.js","../node_modules/ramda/src/internal/_isNumber.js","../node_modules/ramda/src/length.js","../node_modules/ramda/src/when.js","../node_modules/ramda/src/internal/_isFunction.js","../node_modules/ramda/src/ap.js","../node_modules/ramda/src/liftN.js","../node_modules/ramda/src/lift.js","../node_modules/ramda/src/or.js","../node_modules/ramda/src/either.js","../node_modules/ramda/src/internal/_isObject.js","../node_modules/ramda/src/empty.js","../node_modules/ramda/src/internal/_arrayFromIterator.js","../node_modules/ramda/src/internal/_functionName.js","../node_modules/ramda/src/identical.js","../node_modules/ramda/src/internal/_equals.js","../node_modules/ramda/src/equals.js","../node_modules/ramda/src/isEmpty.js","../node_modules/ramda/src/nth.js","../node_modules/ramda/src/last.js","../node_modules/ramda/src/append.js","../node_modules/ramda/src/max.js","../node_modules/ramda/src/prop.js","../node_modules/ramda/src/pluck.js","../node_modules/ramda/src/converge.js","../node_modules/ramda/src/internal/_identity.js","../node_modules/ramda/src/identity.js","../node_modules/ramda/src/addIndex.js","../node_modules/ramda/src/internal/_pipe.js","../node_modules/ramda/src/internal/_checkForMethod.js","../node_modules/ramda/src/slice.js","../node_modules/ramda/src/tail.js","../node_modules/ramda/src/pipe.js","../node_modules/ramda/src/compose.js","../node_modules/ramda/src/internal/_indexOf.js","../node_modules/ramda/src/internal/_contains.js","../node_modules/ramda/src/internal/_quote.js","../node_modules/ramda/src/internal/_toISOString.js","../node_modules/ramda/src/internal/_complement.js","../node_modules/ramda/src/internal/_filter.js","../node_modules/ramda/src/internal/_xfilter.js","../node_modules/ramda/src/filter.js","../node_modules/ramda/src/reject.js","../node_modules/ramda/src/internal/_toString.js","../node_modules/ramda/src/toString.js","../node_modules/ramda/src/invoker.js","../node_modules/ramda/src/join.js","../node_modules/ramda/src/always.js","../node_modules/ramda/src/times.js","../node_modules/ramda/src/repeat.js","../node_modules/ramda/src/internal/_objectAssign.js","../node_modules/ramda/src/internal/_assign.js","../node_modules/ramda/src/merge.js","../node_modules/ramda/src/forEach.js","../node_modules/ramda/src/zip.js","../node_modules/ramda/src/internal/_reduced.js","../node_modules/ramda/src/internal/_xfindIndex.js","../node_modules/ramda/src/findIndex.js","../node_modules/ramda/src/internal/_of.js","../node_modules/ramda/src/of.js","../node_modules/ramda/src/head.js","../node_modules/ramda/src/internal/_xdrop.js","../node_modules/ramda/src/drop.js","../node_modules/ramda/src/internal/_xtake.js","../node_modules/ramda/src/take.js","../node_modules/ramda/src/internal/_dropLast.js","../node_modules/ramda/src/internal/_xdropLast.js","../node_modules/ramda/src/dropLast.js","../node_modules/ramda/src/gt.js","../node_modules/ramda/src/concat.js","../node_modules/ramda/src/ifElse.js","../node_modules/ramda/src/__.js","../node_modules/ramda/src/assoc.js","../node_modules/ramda/src/contains.js","../node_modules/ramda/src/not.js","../src/helpers/onResize.js"],"sourcesContent":["// http://stackoverflow.com/a/27078401/1806628\r\nexport default function throttle(func, wait, options = {}) {\r\n  let context, args, result\r\n  let timeout = null\r\n  let previous = 0\r\n  \r\n  const later = function() {\r\n    previous = options.leading === false ? 0 : Date.now()\r\n    timeout = null\r\n    result = func.apply(context, args)\r\n    \r\n    if (!timeout) {\r\n      context = args = null\r\n    }\r\n  }\r\n  \r\n  return function() {\r\n    const now = Date.now()\r\n    \r\n    if (!previous && options.leading === false) {\r\n      previous = now\r\n    }\r\n    \r\n    const remaining = wait - (now - previous)\r\n    \r\n    context = this\r\n    args = arguments\r\n    \r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout)\r\n        timeout = null\r\n      }\r\n      previous = now\r\n      result = func.apply(context, args)\r\n      if (!timeout) {\r\n        context = args = null\r\n      }\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining)\r\n    }\r\n    \r\n    return result\r\n  }\r\n}\r\n","import {\r\n  clone,\r\n  replace,\r\n  reverse,\r\n  curry,\r\n  map,\r\n  add,\r\n  sum,\r\n  multiply,\r\n  inc,\r\n  adjust,\r\n  dec,\r\n  length,\r\n  when,\r\n  either,\r\n  isEmpty,\r\n  last,\r\n  append,\r\n  converge,\r\n  identity,\r\n  reduce,\r\n  addIndex,\r\n  compose,\r\n  join,\r\n  repeat,\r\n  merge,\r\n  forEach,\r\n  pluck,\r\n  nth,\r\n  zip,\r\n  findIndex,\r\n  equals,\r\n  of,\r\n  head,\r\n  tail,\r\n  drop,\r\n  dropLast,\r\n  gt,\r\n  concat,\r\n  slice,\r\n  ifElse,\r\n  __,\r\n  assoc\r\n} from 'ramda'\r\n\r\nimport {\r\n  getContentHeight,\r\n  getPaddingTop,\r\n  getPaddingBottom,\r\n  getBorderTop,\r\n  getBorderBottom,\r\n  getMarginTop,\r\n  getMarginBottom,\r\n  getSpace\r\n} from './helpers/domsizes'\r\n\r\nimport onResize from './helpers/onResize'\r\n\r\nconst DEFAULT_CONFIG = {\r\n  width: 50\r\n}\r\n\r\nconst splitToWords = curry(htmlString => {\r\n  const elements = htmlString.match(/(?:<[^>]+>|[^\\r\\n\\t <]+)/g)\r\n  const tags = []\r\n\r\n  return reduce((words, element) => {\r\n    if (element.match(/^<\\//) !== null) {\r\n      tags.pop()\r\n    } else if (element.match(/^</) !== null) {\r\n      tags.push(element)\r\n    } else {\r\n      words = append([\r\n        clone(tags),\r\n        element,\r\n        map(tag => '</' + replace(/^<(\\w+).+$/, '$1', tag) + '>', reverse(tags))\r\n      ], words)\r\n    }\r\n\r\n    return words\r\n  }, [], elements)\r\n})\r\n\r\nconst renderWord = ([openingTags, content, closingTags]) => join('', openingTags) + content + join('', closingTags)\r\n\r\nconst getWordWidths = curry((child, paragraph) => {\r\n  // todo: rendering should go to a separate function\r\n  child.innerHTML = join(' ', map(renderWord, paragraph))\r\n\r\n  return assoc(\r\n    'wordWidths',\r\n    addIndex(map)((node, index) => [index, node.scrollWidth], Array.from(child.children)),\r\n    getSpace(child)\r\n  )\r\n})\r\n\r\nconst calculateWidth = (line, spaceWidth) => add(sum(pluck(1, line)), multiply(spaceWidth, inc(length(line))))\r\n\r\nconst sortIntoLines = (containerWidth, spaceWidth) => (lines, wordWidth) => compose(\r\n  converge(\r\n    adjust(append(wordWidth)),\r\n    [\r\n      compose(dec, length),\r\n      identity()\r\n    ]\r\n  ),\r\n  when(\r\n    either(\r\n      isEmpty,\r\n      () => calculateWidth(last(lines), spaceWidth) + nth(1, wordWidth) >= containerWidth\r\n    ),\r\n    append([])\r\n  )\r\n)(lines)\r\n\r\nconst getInnerHtml = element => element.innerHTML\r\nconst getOuterHtml = element => element.outerHTML\r\n\r\nconst getMatchAmount = compose(\r\n  ifElse(\r\n    compose(equals(-1), nth(0)),\r\n    nth(1),\r\n    nth(0)\r\n  ),\r\n  adjust(findIndex(([a, b]) => a !== b), 0),\r\n  adjust(length, 1),\r\n  repeat(__, 2)\r\n)\r\n\r\nconst commonItemsLeft = (left, right, cachedMatches) => {\r\n  const tagsOfRight = nth(0, right)\r\n  const common = zip(concat(cachedMatches, nth(0, left)), tagsOfRight)\r\n\r\n  return slice(0, getMatchAmount(common), tagsOfRight)\r\n}\r\n\r\nconst sliceContentVertically = (child, cuttingPoint) => {\r\n  const topHalf = child.cloneNode(true)\r\n  const bottomHalf = topHalf.cloneNode(true)\r\n  const container = child.parentNode\r\n  const containerWidth = child.scrollWidth\r\n\r\n  container.appendChild(topHalf)\r\n\r\n  const {width, height, wordWidths} = converge(getWordWidths, [identity, compose(splitToWords, getInnerHtml)])(topHalf)\r\n  const indexesPerLine = reduce(sortIntoLines(containerWidth, width), [], wordWidths)\r\n  const childrenPerLine = map(line => map(index => topHalf.children[index], pluck(0, line)), indexesPerLine)\r\n  const slicedChildrenPerLine = map(compose(splitToWords, join(' '), map(getOuterHtml)), childrenPerLine)\r\n\r\n  const mergedChildrenPerLine = map(\r\n    when(\r\n      line => gt(length(line), 1),\r\n      line => {\r\n        let cachedMatches = []\r\n\r\n        return reduce((merged, current) => {\r\n          cachedMatches = commonItemsLeft(last(merged), current, cachedMatches)\r\n\r\n          const commonAmount = length(cachedMatches)\r\n\r\n          merged = adjust(adjust(dropLast(commonAmount), 2), -1, merged)\r\n          current = adjust(drop(commonAmount), 0, current)\r\n\r\n          return append(current, merged)\r\n        }, of(head(line)), tail(line))\r\n      }\r\n    ),\r\n    slicedChildrenPerLine\r\n  )\r\n\r\n  const lines = reduce((lines, line) => {\r\n    line = reduce((children, [openingTags, word, closingTags]) => append(\r\n      join('', openingTags) + word + join('', closingTags),\r\n      children\r\n    ), [], line)\r\n\r\n    return append(join(' ', line), lines)\r\n  }, [], mergedChildrenPerLine)\r\n\r\n  const cutAfterLineNo = Math.floor(cuttingPoint / height)\r\n\r\n  topHalf.innerHTML = join(' ', slice(0, cutAfterLineNo, lines))\r\n  bottomHalf.innerHTML = join(' ', drop(cutAfterLineNo, lines))\r\n\r\n  container.removeChild(topHalf)\r\n\r\n  topHalf.style.marginBottom = 0\r\n  topHalf.style.paddingBottom = 0\r\n  topHalf.style.borderBottomWidth = 0\r\n  bottomHalf.style.marginTop = 0\r\n  bottomHalf.style.paddingTop = 0\r\n  bottomHalf.style.borderTopWidth = 0\r\n\r\n  return [topHalf, bottomHalf]\r\n}\r\n\r\nconst hide = element => {\r\n  element.style = 'height:0;position:absolute;overflow:hidden'\r\n}\r\n\r\nconst generateMeasurementText = compose(join(''), repeat('a'))\r\n\r\nconst getMeasurementWidth = (source, width) => {\r\n  const measurement = document.createElement('div')\r\n  measurement.textContent = generateMeasurementText(width)\r\n  measurement.style = 'position:absolute;visibility:hidden'\r\n\r\n  source.appendChild(measurement)\r\n  const result = measurement.scrollWidth\r\n  source.removeChild(measurement)\r\n\r\n  return result\r\n}\r\n\r\nconst createColumn = (width) => {\r\n  const col = document.createElement('div')\r\n  col.style = 'display:inline-block;height:100%;width:' + width + 'px'\r\n  return col\r\n}\r\n\r\nconst addColumn = (container, width) => {\r\n  const col = createColumn(width)\r\n  container.appendChild(col)\r\n  return col\r\n}\r\n\r\nconst checkMinimalFit = (element, remainingSpaceWithoutMargin, lastMarginBottom) => {\r\n  const margin = Math.max(getMarginTop(element), lastMarginBottom)\r\n  const lineHeight = getSpace(element).height\r\n  return remainingSpaceWithoutMargin >=\r\n    margin +\r\n    getBorderTop(element) +\r\n    getPaddingTop(element) +\r\n    lineHeight\r\n}\r\n\r\nconst checkFullFit = (element, remainingSpaceWithoutMargin, lastMarginBottom) => {\r\n  const margin = Math.max(getMarginTop(element), lastMarginBottom)\r\n  return remainingSpaceWithoutMargin >=\r\n    margin +\r\n    getBorderTop(element) +\r\n    getPaddingTop(element) +\r\n    getContentHeight(element) +\r\n    getPaddingBottom(element) +\r\n    getBorderBottom(element)\r\n}\r\n\r\nfunction splitArticle (rawConfig) {\r\n  const config = merge(DEFAULT_CONFIG, rawConfig)\r\n  hide(config.source)\r\n\r\n  const measuredWidth = getMeasurementWidth(config.source, config.width)\r\n  config.source.style.width = measuredWidth + 'px'\r\n\r\n  forEach(target => { target.innerHTML = '' }, config.targets)\r\n\r\n  const children = Array.from(config.source.children)\r\n\r\n  // --------------------\r\n\r\n  // contents > targets > columns > children\r\n  const contents = [[[]]]\r\n\r\n  const slices = sliceContentVertically(config.source.children[0], 100)\r\n\r\n  addColumn(config.targets[0], measuredWidth).appendChild(slices[0])\r\n  addColumn(config.targets[1], measuredWidth).appendChild(slices[1])\r\n\r\n  console.log(\r\n    checkMinimalFit(\r\n      children[0],\r\n      getContentHeight(config.targets[0]),\r\n      length(contents[0][0]) ? getMarginBottom(last(contents[0][0])) : 0\r\n    ),\r\n    checkFullFit(\r\n      children[0],\r\n      getContentHeight(config.targets[0]),\r\n      length(contents[0][0]) ? getMarginBottom(last(contents[0][0])) : 0\r\n    )\r\n  )\r\n\r\n  // --------------------\r\n\r\n  let currentChildIndex = 0\r\n  let currentContainerIndex = 0\r\n\r\n  addColumn(config.targets[currentContainerIndex])\r\n\r\n  const getSizes = map(child => [\r\n    getMarginTop(child),\r\n    getBorderTop(child) + getPaddingTop(child) + getContentHeight(child) + getPaddingBottom(child) + getBorderBottom(child),\r\n    getMarginBottom(child)\r\n  ])\r\n\r\n  // todo: change this to reduce for children\r\n  while (true) {\r\n    // let currentChild = children[currentChildIndex]\r\n    let currentContainer = config.targets[currentContainerIndex]\r\n    let currentColumn = last(currentContainer)\r\n\r\n    // const remainingSpaceInFirstContainer = () => firstContainer.scrollHeight - contentsForFirstContainer.map(content => content.scrollHeight).reduce((a, b) => a + b, 0)\r\n    let remainingSpace = getContentHeight(currentColumn) -\r\n      compose(\r\n        // todo: adjust last(total[1])[1] to be 0\r\n        reduce((total, [marginTop, height, marginBottom]) => {\r\n          total[0] += height\r\n\r\n          if (length(total[1])) {\r\n            total[1].push([marginTop, marginBottom])\r\n          } else {\r\n            total[1].push([0, marginBottom])\r\n          }\r\n\r\n          return total\r\n        }, [0, []]),\r\n        getSizes\r\n      )(currentColumn.children)\r\n\r\n    console.log(remainingSpace)\r\n\r\n    currentChildIndex++\r\n\r\n    if (currentChildIndex > length(children) - 1) {\r\n      break\r\n    }\r\n  }\r\n\r\n  /*\r\n  if(currentChild.scrollHeight < remainingSpace){\r\n    console.log('fits into first container')\r\n    contentsForFirstContainer.push(currentChild)\r\n  }else{\r\n    console.error('doesn\\'t fit, need to slice')\r\n    verticalSlice(currentChild, remainingSpace)\r\n\r\n    break\r\n  }\r\n  */\r\n\r\n  // --------------------\r\n}\r\n\r\nsplitArticle.watch = rawConfig => {\r\n  splitArticle(rawConfig)\r\n  onResize(() => splitArticle(rawConfig))\r\n}\r\n\r\nexport default splitArticle\r\n","module.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n */\nmodule.exports = _curry1(function type(val) {\n  return val === null      ? 'Null'      :\n         val === undefined ? 'Undefined' :\n         Object.prototype.toString.call(val).slice(8, -1);\n});\n","var _cloneRegExp = require('./_cloneRegExp');\nvar type = require('../type');\n\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nmodule.exports = function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ?\n        _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':  return copy({});\n    case 'Array':   return copy([]);\n    case 'Date':    return new Date(value.valueOf());\n    case 'RegExp':  return _cloneRegExp(value);\n    default:        return value;\n  }\n};\n","var _clone = require('./internal/_clone');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nmodule.exports = _curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ?\n    value.clone() :\n    _clone(value, [], [], true);\n});\n","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nmodule.exports = _curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n","module.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n","var _curry1 = require('./internal/_curry1');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') :\n                           Array.prototype.slice.call(list, 0).reverse();\n});\n","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n","var _isArray = require('./_isArray');\nvar _isTransformer = require('./_isTransformer');\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n","module.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n","var _curry1 = require('./internal/_curry1');\nvar _isArray = require('./internal/_isArray');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @deprecated since v0.23.0\n * @example\n *\n *      R.isArrayLike([]); //=> true\n *      R.isArrayLike(true); //=> false\n *      R.isArrayLike({}); //=> false\n *      R.isArrayLike({length: 10}); //=> false\n *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n","var _xwrap = require('./_xwrap');\nvar bind = require('../bind');\nvar isArrayLike = require('../isArrayLike');\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj) {\n    return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list);\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n","module.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n","var _has = require('./_has');\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar _isArguments = require('./internal/_isArguments');\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _map = require('./internal/_map');\nvar _reduce = require('./internal/_reduce');\nvar _xmap = require('./internal/_xmap');\nvar curryN = require('./curryN');\nvar keys = require('./keys');\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n","var _curry3 = require('./internal/_curry3');\nvar _reduce = require('./internal/_reduce');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * `R.reduced` to shortcut the iteration.\n *\n * The arguments' order of `reduceRight`'s iterator function is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n","var add = require('./add');\nvar reduce = require('./reduce');\n\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nmodule.exports = reduce(add, 0);\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n","var add = require('./add');\n\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nmodule.exports = add(1);\n","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n","var add = require('./add');\n\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nmodule.exports = add(-1);\n","module.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};\n","var _curry1 = require('./internal/_curry1');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n","module.exports = function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n};\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar map = require('./map');\n\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @param {Array} fns An array of functions\n * @param {Array} vs An array of values\n * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nmodule.exports = _curry2(function ap(applicative, fn) {\n  return (\n    typeof applicative.ap === 'function' ?\n      applicative.ap(fn) :\n    typeof applicative === 'function' ?\n      function(x) { return applicative(x)(fn(x)); } :\n    // else\n      _reduce(function(acc, f) { return _concat(acc, map(f, fn)); }, [], applicative)\n  );\n});\n","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar ap = require('./ap');\nvar curryN = require('./curryN');\nvar map = require('./map');\n\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nmodule.exports = _curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function() {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n","var _curry1 = require('./internal/_curry1');\nvar liftN = require('./liftN');\n\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nmodule.exports = _curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nmodule.exports = _curry2(function or(a, b) {\n  return a || b;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar lift = require('./lift');\nvar or = require('./or');\n\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nmodule.exports = _curry2(function either(f, g) {\n  return _isFunction(f) ?\n    function _either() {\n      return f.apply(this, arguments) || g.apply(this, arguments);\n    } :\n    lift(or)(f, g);\n});\n","module.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};\n","var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n","module.exports = function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n};\n","module.exports = function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nmodule.exports = _curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n","var _arrayFromIterator = require('./_arrayFromIterator');\nvar _functionName = require('./_functionName');\nvar _has = require('./_has');\nvar identical = require('../identical');\nvar keys = require('../keys');\nvar type = require('../type');\n\n\nmodule.exports = function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  if (type(a) !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) &&\n           typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (type(a)) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' &&\n          _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline &&\n            a.sticky === b.sticky &&\n            a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n    case 'Map':\n    case 'Set':\n      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n        return false;\n      }\n      break;\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      break;\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  stackA.push(a);\n  stackB.push(b);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  stackA.pop();\n  stackB.pop();\n  return true;\n};\n","var _curry2 = require('./internal/_curry2');\nvar _equals = require('./internal/_equals');\n\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nmodule.exports = _curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n","var _curry1 = require('./internal/_curry1');\nvar empty = require('./empty');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nmodule.exports = _curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nmodule.exports = _curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n","var nth = require('./nth');\n\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nmodule.exports = nth(-1);\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nmodule.exports = _curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nmodule.exports = _curry2(function max(a, b) { return b > a ? b : a; });\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\nmodule.exports = _curry2(function prop(p, obj) { return obj[p]; });\n","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\nvar prop = require('./prop');\n\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig k -> [{k: v}] -> [v]\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} list The array to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nmodule.exports = _curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _map = require('./internal/_map');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nmodule.exports = _curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function() {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function(fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n","module.exports = function _identity(x) { return x; };\n","var _curry1 = require('./internal/_curry1');\nvar _identity = require('./internal/_identity');\n\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nmodule.exports = _curry1(_identity);\n","var _concat = require('./internal/_concat');\nvar _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, Ramda's simple `map` function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function() {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function() {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\n","module.exports = function _pipe(f, g) {\n  return function() {\n    return g.call(this, f.apply(this, arguments));\n  };\n};\n","var _isArray = require('./_isArray');\n\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function() {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n      fn.apply(this, arguments) :\n      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry1 = require('./internal/_curry1');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n","var _arity = require('./internal/_arity');\nvar _pipe = require('./internal/_pipe');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipe, arguments[0], tail(arguments)));\n};\n","var pipe = require('./pipe');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n};\n","var equals = require('../equals');\n\n\nmodule.exports = function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n};\n","var _indexOf = require('./_indexOf');\n\n\nmodule.exports = function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n};\n","module.exports = function _quote(s) {\n  var escaped = s\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    .replace(/\\v/g, '\\\\v')\n    .replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n};\n","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nmodule.exports = (function() {\n  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };\n\n  return typeof Date.prototype.toISOString === 'function' ?\n    function _toISOString(d) {\n      return d.toISOString();\n    } :\n    function _toISOString(d) {\n      return (\n        d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds()) + '.' +\n        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'\n      );\n    };\n}());\n","module.exports = function _complement(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\n","module.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n};\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a \"filterable\", and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar filter = require('./filter');\n\n\n/**\n * The complement of `filter`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n","var _contains = require('./_contains');\nvar _map = require('./_map');\nvar _quote = require('./_quote');\nvar _toISOString = require('./_toISOString');\nvar keys = require('../keys');\nvar reject = require('../reject');\n\n\nmodule.exports = function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function(obj, keys) {\n    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n};\n","var _curry1 = require('./internal/_curry1');\nvar _toString = require('./internal/_toString');\n\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nmodule.exports = _curry1(function toString(val) { return _toString(val, []); });\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar curryN = require('./curryN');\nvar toString = require('./toString');\n\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nmodule.exports = _curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function() {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n","var invoker = require('./invoker');\n\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nmodule.exports = invoker(1, 'join');\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nmodule.exports = _curry1(function always(val) {\n  return function() {\n    return val;\n  };\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\n","var _curry2 = require('./internal/_curry2');\nvar always = require('./always');\nvar times = require('./times');\n\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n","var _has = require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nmodule.exports = function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n};\n","var _objectAssign = require('./_objectAssign');\n\nmodule.exports =\n  typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n","var _assign = require('./internal/_assign');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nmodule.exports = _curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\n","module.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x :\n    {\n      '@@transducer/value': x,\n      '@@transducer/reduced': true\n    };\n};\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindIndex = require('./internal/_xfindIndex');\n\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\n","module.exports = function _of(x) { return [x]; };\n","var _curry1 = require('./internal/_curry1');\nvar _of = require('./internal/_of');\n\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nmodule.exports = _curry1(_of);\n","var nth = require('./nth');\n\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nmodule.exports = nth(0);\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function(result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdrop = require('./internal/_xdrop');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {[a]} list\n * @return {[a]} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function(result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtake = require('./internal/_xtake');\nvar slice = require('./slice');\n\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n","var take = require('../take');\n\nmodule.exports = function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n};\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] =  function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLast = require('./internal/_dropLast');\nvar _xdropLast = require('./internal/_xdropLast');\n\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gt(a, b) { return a > b; });\n","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar _isFunction = require('./internal/_isFunction');\nvar toString = require('./toString');\n\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nmodule.exports = _curry2(function concat(a, b) {\n  if (a == null || !_isFunction(a.concat)) {\n    throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\n  }\n  if (_isArray(a) && !_isArray(b)) {\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  return a.concat(b);\n});\n","var _curry3 = require('./internal/_curry3');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n    function _ifElse() {\n      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n    }\n  );\n});\n","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {'@@functional/placeholder': true};\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n * least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nmodule.exports = _curry2(_contains);\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});\n","import throttle from './throttle'\r\n\r\nconst onResize = fn => {\r\n  let previousPageHeight = document.body.scrollHeight\r\n\r\n  window.addEventListener('resize', throttle(() => {\r\n    if (document.body.scrollHeight !== previousPageHeight) {\r\n      previousPageHeight = document.body.scrollHeight\r\n      fn()\r\n    }\r\n  }, 200, {\r\n    trailing: true,\r\n    leading: false\r\n  }))\r\n}\r\n\r\nexport default onResize\r\n"],"names":["throttle","func","wait","options","let","context","args","result","timeout","previous","later","leading","Date","now","apply","const","remaining","this","arguments","clearTimeout","trailing","setTimeout","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","a","fn","f1","length","_isPlaceholder","_curry1","val","undefined","Object","prototype","toString","call","slice","_clone","value","refFrom","refTo","deep","copy","copiedValue","len","idx","key","type","valueOf","_cloneRegExp","clone","f2","b","_b","_a","f3","c","_curry2","_c","_curry3","regex","replacement","str","replace","x","list","_isString","split","reverse","join","Array","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","_arity","curryN","isArray","obj","methodNames","xf","pop","_isArray","_isTransformer","functor","XWrap","f","acc","thisObj","nodeType","hasOwnProperty","_arrayReduce","_iterableReduce","iter","step","next","done","_methodReduce","reduce","bind","symIterator","Symbol","iterator","_xwrap","isArrayLike","TypeError","init","XMap","_xfBase","input","prop","_has","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","keys","nIdx","ks","checkArgsLength","_isArguments","_dispatchable","_xmap","_reduce","_map","Number","add","set1","set2","len1","len2","start","_idx","_list","_concat","_isNumber","NaN","pred","whenTrueFn","applicative","ap","map","arity","lifted","liftN","g","_isFunction","lift","or","empty","constructor","_isObject","push","match","String","_equals","stackA","stackB","identical","equals","_functionName","name","message","_arrayFromIterator","entries","keysA","offset","charAt","nth","el","p","after","fns","max","pluck","_identity","origFn","methodname","_checkForMethod","fromIndex","toIndex","Infinity","_pipe","tail","pipe","inf","indexOf","_indexOf","s","pad","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","XFilter","_xfilter","filterable","_filter","filter","_complement","_toString","seen","recur","y","xs","concat","_contains","mapPairs","k","_quote","sort","reject","test","isNaN","_toISOString","repr","method","target","invoker","RangeError","times","always","output","nextKey","assign","_objectAssign","l","r","_assign","rv","Math","min","@@transducer/value","@@transducer/reduced","XFindIndex","found","_reduced","_xfindIndex","_of","XDrop","_xdrop","XTake","i","ret","_xtake","take","XDropLast","pos","full","store","_xdropLast","_dropLast","condition","onTrue","onFalse","@@functional/placeholder","onResize","previousPageHeight","document","body","scrollHeight","window","addEventListener","splitArticle"],"mappings":"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"}